{"version":3,"sources":["components/Auth/useFormValidation.js","components/Auth/validateCreateLink.js","firebase/context.js","components/Link/CreateLink.js","components/Auth/validateLogin.js","firebase/config.js","firebase/index.js","firebase/firebase.js","components/Auth/Login.js","components/Auth/ForgotPassword.js","components/Link/LinkItem.js","utils/index.js","components/Link/SearchLinks.js","components/Link/LinkList.js","components/Link/LinkDetail.js","components/Header.js","components/Auth/useAuth.js","components/App.js","serviceWorker.js","index.js"],"names":["useFormValidation","initialState","validate","authenticate","_React$useState","React","useState","_React$useState2","Object","slicedToArray","values","setValues","_React$useState3","_React$useState4","errors","setErrors","_React$useState5","_React$useState6","isSubmitting","setSubmitting","useEffect","keys","length","handleSubmit","event","preventDefault","validationErrors","handleBlur","handleChange","persist","previousValues","objectSpread","defineProperty","target","name","value","validateCreateLink","description","url","test","FirebaseContext","createContext","INITIAL_STATE","CreateLink","props","_React$useContext","useContext","firebase","user","_useFormValidation","newLink","postedBy","id","uid","displayName","votes","comments","created","Date","now","db","collection","add","history","push","react_default","a","createElement","onSubmit","className","onChange","placeholder","autoComplete","type","validateLogin","email","password","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","classCallCheck","this","app","initializeApp","auth","firestore","createUserWithEmailAndPassword","newUser","updateProfile","signInWithEmailAndPassword","signOut","sendPasswordResetEmail","Login","_authenticateUser","apply","arguments","login","setLogin","firebaseError","setFirebaseError","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","register","t0","console","error","message","stop","disabled","style","background","onClick","prevLogin","react_router_dom","to","ForgotPassword","resetPasswordEmail","setResetPasswordEmail","isPasswordReset","setIsPasswordReset","passwordResetError","setPasswordResetError","_handleResetPassword","resetPassword","withRouter","_ref","link","index","showCount","postedByAuthUser","voteRef","doc","get","then","exists","previousVotes","data","vote","votedBy","updatedVotes","concat","toConsumableArray","update","replace","distanceInWordsToNow","Fragment","delete","log","catch","err","SearchLinks","filteredLinks","setFilteredLinks","links","setLinks","filter","setFilter","snapshot","docs","map","query","toLowerCase","matchedLinks","includes","filteredLink","Link_LinkItem","key","LinkList","_useState","_useState2","loading","setLoading","isNewPage","location","pathname","handleSnapshot","orderBy","onSnapshot","opacity","slice","sort","l1","l2","LinkDetail","setLink","commentText","setCommentText","linkId","match","params","linkRef","rows","cols","previousComments","comment","text","updatedComments","prevState","src","alt","logout","useAuth","authUser","setAuthUser","unsubscribe","onAuthStateChanged","App","context","Provider","components_Header","react_router","exact","path","render","component","Boolean","window","hostname","ReactDOM","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.c90ca321.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction useFormValidation(initialState, validate, authenticate) {\n  const [values, setValues] = React.useState(initialState);\n  const [errors, setErrors] = React.useState({});\n  const [isSubmitting, setSubmitting] = React.useState(false);\n\n  React.useEffect(() => {\n    if (isSubmitting) {\n      const noErrors = Object.keys(errors).length === 0;\n      if (noErrors) {\n        authenticate();\n        setSubmitting(false);\n      } else {\n        setSubmitting(false);\n      }\n    }\n  }, [errors]);\n\n  function handleChange(event) {\n    event.persist();\n    setValues(previousValues => ({\n      ...previousValues,\n      [event.target.name]: event.target.value\n    }));\n  }\n\n  function handleBlur() {\n    const validationErrors = validate(values);\n    setErrors(validationErrors);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    const validationErrors = validate(values);\n    setErrors(validationErrors);\n    setSubmitting(true);\n  }\n\n  return {\n    handleSubmit,\n    handleBlur,\n    handleChange,\n    values,\n    errors,\n    isSubmitting\n  };\n}\n\nexport default useFormValidation;\n","export default function validateCreateLink(values) {\n  let errors = {};\n\n  // Description Errors\n  if (!values.description) {\n    errors.description = \"Description required\";\n  } else if (values.description.length < 10) {\n    errors.description = \"Description must be at least 10 characters\";\n  }\n  // Url Errors\n  if (!values.url) {\n    errors.url = \"URL required\";\n  } else if (!/^(ftp|http|https):\\/\\/[^ \"]+$/.test(values.url)) {\n    errors.url = \"URL must be valid\";\n  }\n\n  return errors;\n}\n","import React from \"react\";\n\nconst FirebaseContext = React.createContext(null);\n\nexport default FirebaseContext;\n","import React from \"react\";\nimport useFormValidation from \"../Auth/useFormValidation\";\nimport validateCreateLink from \"../Auth/validateCreateLink\";\nimport FirebaseContext from \"../../firebase/context\";\n\nconst INITIAL_STATE = {\n  description: \"\",\n  url: \"\"\n};\n\nfunction CreateLink(props) {\n  const { firebase, user } = React.useContext(FirebaseContext);\n  const { handleSubmit, handleChange, values, errors } = useFormValidation(\n    INITIAL_STATE,\n    validateCreateLink,\n    handleCreateLink\n  );\n\n  function handleCreateLink() {\n    if (!user) {\n      props.history.push(\"/login\");\n    } else {\n      const { url, description } = values;\n      const newLink = {\n        url,\n        description,\n        postedBy: {\n          id: user.uid,\n          name: user.displayName\n        },\n        votes: [],\n        comments: [],\n        created: Date.now()\n      };\n      firebase.db.collection(\"links\").add(newLink);\n      props.history.push(\"/\");\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className=\"flex flex-column mt3\">\n      <input\n        onChange={handleChange}\n        value={values.description}\n        name=\"description\"\n        placeholder=\"A description for your link\"\n        autoComplete=\"off\"\n        type=\"text\"\n        className={errors.description && \"error-input\"}\n      />\n      {errors.description && <p className=\"error-text\">{errors.description}</p>}\n      <input\n        onChange={handleChange}\n        value={values.url}\n        name=\"url\"\n        placeholder=\"The URL for the link\"\n        autoComplete=\"off\"\n        type=\"url\"\n        className={errors.url && \"error-input\"}\n      />\n      {errors.url && <p className=\"error-text\">{errors.url}</p>}\n      <button className=\"button\" type=\"submit\">\n        Submit\n      </button>\n    </form>\n  );\n}\n\nexport default CreateLink;\n","export default function validateLogin(values) {\n  let errors = {};\n\n  // Email Errors\n  if (!values.email) {\n    errors.email = \"Email required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n  // Password Errors\n  if (!values.password) {\n    errors.password = \"Password required\";\n  } else if (values.password.length < 6) {\n    errors.password = \"Password must be at least 6 characters\";\n  }\n\n  return errors;\n}\n","// Your web app's Firebase configuration\nvar firebaseConfig = {\n  apiKey: 'AIzaSyA0nDAJoB69qArmutkjLCJe10nvScWQnPI',\n  authDomain: 'hooks-news-app-8c114.firebaseapp.com',\n  databaseURL: 'https://hooks-news-app-8c114.firebaseio.com',\n  projectId: 'hooks-news-app-8c114',\n  storageBucket: '',\n  messagingSenderId: '930453849695',\n  appId: '1:930453849695:web:c780776cf864fc52'\n};\n\nexport default firebaseConfig;\n","import firebase from \"./firebase\";\nimport FirebaseContext from \"./context\";\n\nexport { FirebaseContext };\nexport default firebase;\n","import app from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nimport firebaseConfig from \"./config\";\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(firebaseConfig);\n    this.auth = app.auth();\n    this.db = app.firestore();\n  }\n\n  async register(name, email, password) {\n    const newUser = await this.auth.createUserWithEmailAndPassword(\n      email,\n      password\n    );\n    return await newUser.user.updateProfile({\n      displayName: name\n    });\n  }\n\n  async login(email, password) {\n    return await this.auth.signInWithEmailAndPassword(email, password);\n  }\n\n  async logout() {\n    await this.auth.signOut();\n  }\n\n  async resetPassword(email) {\n    await this.auth.sendPasswordResetEmail(email);\n  }\n}\n\nconst firebase = new Firebase();\nexport default firebase;\n","import React from 'react';\nimport useFormValidation from './useFormValidation';\nimport validateLogin from './validateLogin';\nimport firebase from '../../firebase';\nimport { Link } from 'react-router-dom';\n\nconst INITIAL_STATE = {\n  name: '',\n  email: '',\n  password: ''\n};\n\nfunction Login(props) {\n  const {\n    handleSubmit,\n    handleChange,\n    values,\n    errors,\n    isSubmitting\n  } = useFormValidation(INITIAL_STATE, validateLogin, authenticateUser);\n  const [login, setLogin] = React.useState(true);\n  const [firebaseError, setFirebaseError] = React.useState(null);\n\n  async function authenticateUser() {\n    const { name, email, password } = values;\n    try {\n      login\n        ? await firebase.login(email, password)\n        : await firebase.register(name, email, password);\n      props.history.push('/');\n    } catch (err) {\n      console.error('Authentication Error', err);\n      setFirebaseError(err.message);\n    }\n  }\n\n  return (\n    <div>\n      <h2 className=\"mv3\">{login ? 'Login' : 'Create Account'}</h2>\n      <form onSubmit={handleSubmit} className=\"flex flex-column\">\n        {!login && (\n          <input\n            onChange={handleChange}\n            value={values.name}\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Your name\"\n            autoComplete=\"off\"\n          />\n        )}\n        <input\n          onChange={handleChange}\n          value={values.email}\n          name=\"email\"\n          type=\"email\"\n          className={errors.email && 'error-input'}\n          placeholder=\"Your email\"\n          autoComplete=\"off\"\n        />\n        {errors.email && <p className=\"error-text\">{errors.email}</p>}\n        <input\n          onChange={handleChange}\n          value={values.password}\n          className={errors.password && 'error-input'}\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Choose a secure password\"\n        />\n        {errors.password && <p className=\"error-text\">{errors.password}</p>}\n        {firebaseError && <p className=\"error-text\">{firebaseError}</p>}\n        <div className=\"flex mt3\">\n          <button\n            type=\"submit\"\n            className=\"button pointer mr2\"\n            disabled={isSubmitting}\n            style={{ background: isSubmitting ? 'grey' : 'orange' }}\n          >\n            Submit\n          </button>\n          <button\n            type=\"button\"\n            className=\"pointer button\"\n            onClick={() => setLogin(prevLogin => !prevLogin)}\n          >\n            {login ? 'need to create an account?' : 'already have an account?'}\n          </button>\n        </div>\n      </form>\n      <div className=\"forgot-password\">\n        <Link to=\"/forgot\">Forgot password?</Link>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","import React from \"react\";\nimport FirebaseContext from \"../../firebase/context\";\n\nfunction ForgotPassword() {\n  const { firebase } = React.useContext(FirebaseContext);\n  const [resetPasswordEmail, setResetPasswordEmail] = React.useState(\"\");\n  const [isPasswordReset, setIsPasswordReset] = React.useState(false);\n  const [passwordResetError, setPasswordResetError] = React.useState(null);\n\n  async function handleResetPassword() {\n    try {\n      await firebase.resetPassword(resetPasswordEmail);\n      setIsPasswordReset(true);\n      setPasswordResetError(null);\n    } catch (err) {\n      console.error(\"Error sending email\", err);\n      setPasswordResetError(err.message);\n      setIsPasswordReset(false);\n    }\n  }\n\n  return (\n    <div>\n      <input\n        type=\"email\"\n        className=\"input\"\n        placeholder=\"Provide your account email\"\n        onChange={event => setResetPasswordEmail(event.target.value)}\n      />\n      <div>\n        <button className=\"button\" onClick={handleResetPassword}>\n          Reset Password\n        </button>\n      </div>\n      {isPasswordReset && <p>Check email to reset password</p>}\n      {passwordResetError && <p className=\"error-text\">{passwordResetError}</p>}\n    </div>\n  );\n}\n\nexport default ForgotPassword;\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { getDomain } from \"../../utils\";\nimport distanceInWordsToNow from \"date-fns/distance_in_words_to_now\";\nimport FirebaseContext from \"../../firebase/context\";\n\nfunction LinkItem({ link, index, showCount, history }) {\n  const { firebase, user } = React.useContext(FirebaseContext);\n\n  function handleVote() {\n    if (!user) {\n      history.push(\"/login\");\n    } else {\n      const voteRef = firebase.db.collection(\"links\").doc(link.id);\n      voteRef.get().then(doc => {\n        if (doc.exists) {\n          const previousVotes = doc.data().votes;\n          const vote = { votedBy: { id: user.uid, name: user.displayName } };\n          const updatedVotes = [...previousVotes, vote];\n          voteRef.update({ votes: updatedVotes });\n        }\n      });\n    }\n  }\n\n  function handleDeleteLink() {\n    const linkRef = firebase.db.collection(\"links\").doc(link.id);\n    linkRef\n      .delete()\n      .then(() => {\n        console.log(`Document with ID ${link.id} deleted`);\n      })\n      .catch(err => {\n        console.error(\"Error deleting document:\", err);\n      });\n  }\n\n  const postedByAuthUser = user && user.uid === link.postedBy.id;\n\n  return (\n    <div className=\"flex items-start mt2\">\n      <div className=\"flex items-center\">\n        {showCount && <span className=\"gray\">{index}.</span>}\n        <div className=\"vote-button\" onClick={handleVote}>\n          ▲\n        </div>\n      </div>\n      <div className=\"ml1\">\n        <div>\n          {link.description}{\" \"}\n          <span className=\"link\">({getDomain(link.url)})</span>\n        </div>\n        <div className=\"f6 lh-copy gray\">\n          {link.votes.length} votes by {link.postedBy.name}{\" \"}\n          {distanceInWordsToNow(link.created)}\n          {\" | \"}\n          <Link to={`/link/${link.id}`}>\n            {link.comments.length > 0\n              ? `${link.comments.length} comments`\n              : \"discuss\"}\n          </Link>\n          {postedByAuthUser && (\n            <>\n              {\" | \"}\n              <span className=\"delete-button\" onClick={handleDeleteLink}>\n                delete\n              </span>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(LinkItem);\n","export const LINKS_PER_PAGE = 5;\n\nexport function getDomain(url) {\n  return url.replace(/^https?:\\/\\//i, '');\n}\n","import React from \"react\";\nimport LinkItem from \"./LinkItem\";\nimport FirebaseContext from \"../../firebase/context\";\n\nfunction SearchLinks() {\n  const { firebase } = React.useContext(FirebaseContext);\n  const [filteredLinks, setFilteredLinks] = React.useState([]);\n  const [links, setLinks] = React.useState([]);\n  const [filter, setFilter] = React.useState(\"\");\n\n  React.useEffect(() => {\n    getInitialLinks();\n  }, []);\n\n  function getInitialLinks() {\n    firebase.db\n      .collection(\"links\")\n      .get()\n      .then(snapshot => {\n        const links = snapshot.docs.map(doc => {\n          return { id: doc.id, ...doc.data() };\n        });\n        setLinks(links);\n      });\n  }\n\n  function handleSearch(event) {\n    event.preventDefault();\n    const query = filter.toLowerCase();\n    const matchedLinks = links.filter(link => {\n      return (\n        link.description.toLowerCase().includes(query) ||\n        link.url.toLowerCase().includes(query) ||\n        link.postedBy.name.toLowerCase().includes(query)\n      );\n    });\n    setFilteredLinks(matchedLinks);\n  }\n\n  return (\n    <div>\n      <form onSubmit={handleSearch}>\n        <div>\n          Search <input onChange={event => setFilter(event.target.value)} />\n          <button>OK</button>\n        </div>\n      </form>\n      {filteredLinks.map((filteredLink, index) => (\n        <LinkItem\n          key={filteredLink.id}\n          showCount={false}\n          link={filteredLink}\n          index={index}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default SearchLinks;\n","import React, { useState } from 'react';\nimport FirebaseContext from '../../firebase/context';\nimport LinkItem from './LinkItem';\n\nfunction LinkList(props) {\n  const { firebase } = React.useContext(FirebaseContext);\n  const [links, setLinks] = React.useState([]);\n  const [loading, setLoading] = useState(false);\n  const isNewPage = props.location.pathname.includes('new');\n\n  React.useEffect(() => {\n    getLinks();\n  }, []);\n\n  function getLinks() {\n    setLoading(true);\n    firebase.db\n      .collection('links')\n      .orderBy('created', 'desc')\n      .onSnapshot(handleSnapshot);\n    setLoading(false);\n  }\n\n  function handleSnapshot(snapshot) {\n    const links = snapshot.docs.map(doc => {\n      return { id: doc.id, ...doc.data() };\n    });\n    setLinks(links);\n    setLoading(false);\n  }\n\n  function renderLinks() {\n    if (isNewPage) {\n      return links;\n    }\n    const topLinks = links\n      .slice()\n      .sort((l1, l2) => l2.votes.length - l1.votes.length);\n    return topLinks;\n  }\n\n  return (\n    <div style={{ opacity: loading ? 0.25 : 1 }}>\n      {renderLinks().map((link, index) => (\n        <LinkItem\n          key={link.id}\n          showCount={true}\n          link={link}\n          index={index + 1}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default LinkList;\n","import React from \"react\";\nimport FirebaseContext from \"../../firebase/context\";\nimport LinkItem from \"./LinkItem\";\nimport distanceInWordsToNow from \"date-fns/distance_in_words_to_now\";\n\nfunction LinkDetail(props) {\n  const { firebase, user } = React.useContext(FirebaseContext);\n  const [link, setLink] = React.useState(null);\n  const [commentText, setCommentText] = React.useState(\"\");\n  const linkId = props.match.params.linkId;\n  const linkRef = firebase.db.collection(\"links\").doc(linkId);\n\n  React.useEffect(() => {\n    getLink();\n  }, []);\n\n  function getLink() {\n    linkRef.get().then(doc => {\n      setLink({ ...doc.data(), id: doc.id });\n    });\n  }\n\n  function handleAddComment() {\n    if (!user) {\n      props.history.push(\"/login\");\n    } else {\n      linkRef.get().then(doc => {\n        if (doc.exists) {\n          const previousComments = doc.data().comments;\n          const comment = {\n            postedBy: { id: user.uid, name: user.displayName },\n            created: Date.now(),\n            text: commentText\n          };\n          const updatedComments = [...previousComments, comment];\n          linkRef.update({ comments: updatedComments });\n          setLink(prevState => ({\n            ...prevState,\n            comments: updatedComments\n          }));\n          setCommentText(\"\");\n        }\n      });\n    }\n  }\n\n  return !link ? (\n    <div>Loading...</div>\n  ) : (\n    <div>\n      <LinkItem showCount={false} link={link} />\n      <textarea\n        onChange={event => setCommentText(event.target.value)}\n        value={commentText}\n        rows=\"6\"\n        cols=\"60\"\n      />\n      <div>\n        <button className=\"button\" onClick={handleAddComment}>\n          Add Comment\n        </button>\n      </div>\n      {link.comments.map((comment, index) => (\n        <div key={index}>\n          <p className=\"comment-author\">\n            {comment.postedBy.name} | {distanceInWordsToNow(comment.created)}\n          </p>\n          <p>{comment.text}</p>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default LinkDetail;\n","import React from \"react\";\nimport { withRouter, NavLink } from \"react-router-dom\";\nimport { FirebaseContext } from \"../firebase\";\n\nfunction Header() {\n  const { user, firebase } = React.useContext(FirebaseContext);\n\n  return (\n    <div className=\"header\">\n      <div className=\"flex\">\n        <img src=\"/logo.png\" alt=\"Hooks News Logo\" className=\"logo\" />\n        <NavLink to=\"/\" className=\"header-title\">\n          Hooks News\n        </NavLink>\n        <NavLink to=\"/\" className=\"header-link\">\n          new\n        </NavLink>\n        <div className=\"divider\">|</div>\n        <NavLink to=\"/top\" className=\"header-link\">\n          top\n        </NavLink>\n        <div className=\"divider\">|</div>\n        <NavLink to=\"/search\" className=\"header-link\">\n          search\n        </NavLink>\n        {user && (\n          <>\n            <div className=\"divider\">|</div>\n            <NavLink to=\"/create\" className=\"header-link\">\n              submit\n            </NavLink>\n          </>\n        )}\n      </div>\n      <div className=\"flex\">\n        {user ? (\n          <>\n            <div className=\"header-name\">{user.displayName}</div>\n            <div className=\"divider\">|</div>\n            <div className=\"header-button\" onClick={() => firebase.logout()}>\n              logout\n            </div>\n          </>\n        ) : (\n          <NavLink to=\"/login\" className=\"header-link\">\n            login\n          </NavLink>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(Header);\n","import React from \"react\";\nimport firebase from \"../../firebase\";\n\nfunction useAuth() {\n  const [authUser, setAuthUser] = React.useState(null);\n\n  React.useEffect(() => {\n    const unsubscribe = firebase.auth.onAuthStateChanged(user => {\n      if (user) {\n        setAuthUser(user);\n      } else {\n        setAuthUser(null);\n      }\n    });\n\n    return () => unsubscribe();\n  }, []);\n\n  return authUser;\n}\n\nexport default useAuth;\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport CreateLink from \"./Link/CreateLink\";\nimport Login from \"./Auth/Login\";\nimport ForgotPassword from \"./Auth/ForgotPassword\";\nimport SearchLinks from \"./Link/SearchLinks\";\nimport LinkList from \"./Link/LinkList\";\nimport LinkDetail from \"./Link/LinkDetail\";\nimport Header from \"./Header\";\nimport useAuth from \"./Auth/useAuth\";\nimport firebase, { FirebaseContext } from \"../firebase\";\n\nfunction App() {\n  const user = useAuth();\n\n  return (\n    <BrowserRouter>\n      <FirebaseContext.Provider value={{ user, firebase }}>\n        <div className=\"app-container\">\n          <Header />\n          <div className=\"route-container\">\n            <Switch>\n              <Route exact path=\"/\" render={() => <Redirect to=\"/new/1\" />} />\n              <Route path=\"/create\" component={CreateLink} />\n              <Route path=\"/login\" component={Login} />\n              <Route path=\"/forgot\" component={ForgotPassword} />\n              <Route path=\"/search\" component={SearchLinks} />\n              <Route path=\"/top\" component={LinkList} />\n              <Route path=\"/new/:page\" component={LinkList} />\n              <Route path=\"/link/:linkId\" component={LinkDetail} />\n            </Switch>\n          </div>\n        </div>\n      </FirebaseContext.Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}